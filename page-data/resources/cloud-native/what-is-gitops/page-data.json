{"componentChunkName":"component---src-templates-resource-single-js","path":"/resources/cloud-native/what-is-gitops","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"What is GitOps?\",\n  \"thumbnail\": \"../../../../assets/images/socialIcons/github-dark.svg\",\n  \"darkthumbnail\": \"../../../../assets/images/socialIcons/github-light.svg\",\n  \"date\": \"2022-08-16 10:30:05 -0530\",\n  \"category\": \"Cloud Native\",\n  \"tags\": [\"GitOps\"],\n  \"type\": \"Article\",\n  \"technology\": \"Kubernetes\",\n  \"product\": \"Meshery\",\n  \"featured\": false,\n  \"published\": true,\n  \"resource\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ResourcesWrapper, {\n    mdxType: \"ResourcesWrapper\"\n  }, mdx(\"p\", null, \"GitOps revolves around the central notion that infrastructure can be treated as code. Like code, not only can you store your infrastructure configuration in a source code version system, but you can also take your infrastructure configurtion and any changes to its configuration through the same change management process that you do when updating your applications and services. In part, GitOps is about change management, and consquently, it is about risk reduction and risk management. When you automated a process and classify the manner in which you systemize the process, risk is reduced through the consistency and series of processes and reviews changes go through.\"), mdx(\"p\", null, \"GitOps is the acknowledgement that declarative systems that everything is (or should be) defined as code. With all code in a source code system, that system becomes the source of truth and in the system of record for how your infrastructure is running. Well, that is, assumign that your infrastructure configuraiton hasn't drifted from its desired stated defined in your source code system. If Git is the source of truth, you cannot run operations manually by executing random commands. Doing so would mean that Git would stop being the only source of truth. Instead, the only goal of humans (operations) is to define the desired state as code and store it in git. Then, let the machines synchronize that with the actual state. Such synchronization must be continuous so that the two states are (almost) always in sync. In other words, GitOps is about defining everything as code, storing that code in Git, and letting the machines detect the drift between the desired and the actual state \\u2013 and making sure that drifts are resolved as soon as possible, hence resulting in the two states being almost always in sync.\"), mdx(\"h2\", null, \"Principles of GitOps\"), mdx(\"p\", null, \"The principles of the OpenGitOps initiative identify the following four signifant characteristics of GitOps:\"), mdx(\"h3\", null, \"1) Declarative\"), mdx(\"p\", null, \"A system managed by GitOps must have its desired state expressed declaratively.\"), mdx(\"h3\", null, \"2) Versioned and Immutable\"), mdx(\"p\", null, \"Desired state is stored in a way that enforces immutability, versioning and retains a complete version history.\"), mdx(\"h3\", null, \"3) Pulled Automatically\"), mdx(\"p\", null, \"Software agents automatically pull the desired state declarations from the source.\"), mdx(\"h3\", null, \"4) Continuously Reconciled\"), mdx(\"p\", null, \"Software agents continuously observe actual system state and attempt to apply the desired state.\"), mdx(\"p\", null, \"OpenGitOps is a set of open-source standards, best practices, and community-focused education to help organizations adopt a structured, standardized approach to implementing GitOps.\"), mdx(\"p\", null, \"If you are new to GitOps, it builds and iterates on ideas drawn from DevOps and Infrastructure as Code that started with Martin Fowler\\u2019s comprehensive Continuous Integration overview and provides the freedom to choose the tools that you need for your specific use cases.\"), mdx(\"p\", null, \"Individuals, teams, and organizations who implement GitOps experience many benefits, including:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Increased Developer & Operational Productivity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Enhanced Developer Experience\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Improved Stability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Higher Reliability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consistency and Standardization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stronger Security Guarantees\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"What is GitOps?","subtitle":null,"date":"August 16th, 2022","author":null,"category":"Cloud Native","tags":["GitOps"],"thumbnail":{"childImageSharp":null,"extension":"svg","publicURL":"/static/a8d747801f0e266dbc9bb2b192cd3dc1/github-dark.svg"}},"fields":{"slug":"/resources/cloud-native/what-is-gitops"}}},"pageContext":{"slug":"/resources/cloud-native/what-is-gitops"}},"staticQueryHashes":["1485533831","2449327605","2848499768","4047814605"]}